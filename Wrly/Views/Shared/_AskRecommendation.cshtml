@model Wrly.Models.AskRecommendationViewModel

@using (Html.BeginForm("AskRecommendation", "Reference", FormMethod.Post, new { @class = "form-horizontal", @id = "frmRecomedation", role = "form", @onsubmit = "return askRecommendation($(this))" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(c => c.Hash)
    @Html.HiddenFor(c => c.UserHash)
    <div class="form-group">
        <label class="control-label">To whom you would like to ask to recommend for:</label>
        <div class="col-md-10" id="Participents">
            @Html.TextBox("ParticipentText", null, new { @id = "ParticipentText", @placeholder = "type your connect names for asking a recommendation", @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label">Ask recommendation for</label>
        @Html.RadioButtonFor(c => c.RecommedationType, "None")<label class="control-label">General<small>(Will have less engagement)</small></label>
        @Html.RadioButtonFor(c => c.RecommedationType, "Skill")<label class="control-label">Skill</label>
        @Html.RadioButtonFor(c => c.RecommedationType, "Role")<label class="control-label">Role</label>
    </div>
    if (Model.RecommedationType == "Skill")
    {
        <div class="form-group" data-val-for="skills">
            @Html.DropDownListFor(c => c.SkillID, Model.Skills, new { @id = "selectSkill", @class = "form-control" })
        </div>
    }
    else
    {
        <div class="form-group" data-val-for="skills" style="display:none">
            @Html.DropDownListFor(c => c.SkillID, Model.Skills, new { @id = "selectSkill", @class = "form-control" })
        </div>
    }
    if (Model.RecommedationType == "Role")
    {
        <div class="form-group" data-val-for="role">
            @Html.DropDownListFor(c => c.CareerHistoryID, Model.CareerHistoryList, new { @id = "selectRole", @class = "form-control" })
        </div>
    }
    else
    {
        <div class="form-group" data-val-for="role" style="display:none">
            @Html.DropDownListFor(c => c.CareerHistoryID, Model.CareerHistoryList, new { @id = "selectRole", @class = "form-control" })
        </div>
    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-primary btn-sm" value="Send request" />
            <a class="link-alike" onclick="return removeFormAndShowSource($('#frmRecomedation'), $('button[data-add-exp]'))" href="#">Cancel</a><div class="waiting-bg"></div>
        </div>
    </div>

    <script>

        $(document).ready(function () {
            $("form").data("validator", null);
            $.validator.unobtrusive.parse($("form"));

            $('input[name="RecommedationType"]').click(function () {
                if ($(this).val() == "Skill") {
                    $('div[data-val-for="skills"]').show();
                    $('div[data-val-for="role"]').hide();
                }
                else if ($(this).val() == "Role") {
                    $('div[data-val-for="skills"]').hide();
                    $('div[data-val-for="role"]').show();
                } else {
                    $('div[data-val-for="skills"]').hide();
                    $('div[data-val-for="role"]').hide();
                }
            });
        });
        function askRecommendation($obj) {
            var ser = $obj.serialize();
            var action = $obj.attr('action');
            if ($obj.valid()) {
                $.ajax({
                    url: action,
                    type: 'POST',
                    waitingSelector: $obj.find('.waiting-bg'),
                    data: ser,
                    dataType: 'html',
                    success: function (response) {
                        $("#recommendation-list").prepend(response);
                        $obj.remove();
                        postEditAction();
                    }
                });
            }
            return false;
        }

        $(document).ready(function () {
            $("form").data("validator", null);
            $.validator.unobtrusive.parse($("form"));
            var data = [];
            $("#ParticipentText").autocomplete({
                minLength: 1,
                source: function (request, response) {
                    isAutomComplete = true;
                    $.ajax({
                        url: "/Association/ConnectionHeads",
                        data: { keyword: $("#ParticipentText").val() },
                        dataType: "json",
                        type: "POST",
                        success: function (data) {
                            isAutomComplete = false;
                            if (data.length == 0) {
                                $("#ParticipentText").removeClass('working');
                            }
                            response($.map
                            (data, function (obj) {
                                return {
                                    label: obj.FormatedName,
                                    value: obj.FormatedName,
                                    entityID: obj.EntityID.toString().trim(),
                                    jobTitle: obj.ProfileHeading == null ? '' : obj.ProfileHeading,
                                    profilePath: obj.ProfileIconPath == null ? '/content/images/no-image-sm.png' : obj.ProfileIconPath
                                };
                            }));
                        },
                        error: function () { isAutomComplete = false; }
                    });
                },
                create: function () {
                    $(this).data('ui-autocomplete')._renderItem = function (ul, item) {
                        return $('<li>').append('<div class="search-result-item"><div class="thumbnail-notification-con"><img class="thumbnail-notification" src="' + item.profilePath + '" alt="no image ' + item.label + ' "></div><div class="side-thumbnail"><h3>' + item.label + '</h3><span class="child-headings">' + item.jobTitle + '</span></div>     </div>').appendTo(ul);
                    }
                },
                open: function () { $(this).autocomplete("widget").appendTo("#Participents").css('position', 'static'); },
                select: function (event, ui) {
                    var element = '<div class="people-selected"><span onclick="____removeTempMember($(this))" class="remove">X</span><input type="hidden" name="Providers" value="' + ui.item.entityID.toString() + '" /> <div class="thumbnail-notification-con"><img class="thumbnail-notification" src="' + ui.item.profilePath + '" alt="no image ' + ui.item.label + ' "></div><div class="side-thumbnail"><h3>' + ui.item.label + '</h3><span class="child-headings">' + ui.item.jobTitle + '</span></div>     </div>';
                    $('#Participents').parent().find('.selected').append(element.toString());
                    $('#Participents').append(element.toString());
                    this.value = "";
                    return false;
                }
            });
        })


    </script>
}
