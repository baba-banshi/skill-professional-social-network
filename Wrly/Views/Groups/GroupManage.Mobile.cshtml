@model Wrly.Models.Business.GroupViewModel
@{
    ViewBag.Title = Model.Name;
    ViewBag.Description = Model.Description;
    Layout = "~/Views/Shared/_GroupLayoutAuthenticated.cshtml";
    string wrapperClass = string.Empty;
}
<link href="~/Content/Views/profile/_mobile.css" rel="stylesheet" />
<div class="mobile-container">
    @{ViewBag.DefaultTab = false; Html.RenderPartial("_ManageGroupProfileFace", Model);}
    <div class="section-floated no-shadow">
        <div class="section-floated-container">
            <div class="text-right"><a href="/groups/@Model.ProfileName?publicView=true">View public</a></div>
            <div class="tabs">
                @if (Model.Mode == Types.Enums.GroupMode.General)
                {
                <div class="tab">
                    <a data-val-for="career-contents" class="active" href="/groups/@Model.ProfileName">Group</a>
                </div>
                    if (Model.MemberRequests > 0)
                    {
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/groups/@Model.ProfileName/member-requests">Member requests <span class="tab-count danger">@Model.MemberRequests</span></a>
                </div>
                    }
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/groups/@Model.ProfileName/members">Members</a>
                </div>
                }
                else if (Model.Mode == Types.Enums.GroupMode.Requests)
                {
                <div class="tab">
                    <a data-val-for="career-contents" href="/groups/@Model.ProfileName">Group</a>
                </div>
                    if (Model.MemberRequests > 0)
                    {
                <div class="tab">
                    <a data-val-for="timeline-contents" class="active" href="/groups/@Model.ProfileName/member-requests">Member requests <span class="tab-count danger">@Model.MemberRequests</span></a>
                </div>
                    }
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/groups/@Model.ProfileName/members">Members</a>
                </div>
                }
                else if (Model.Mode == Types.Enums.GroupMode.Members)
                {
                <div class="tab">
                    <a data-val-for="career-contents" href="/groups/@Model.ProfileName">Group</a>
                </div>
                    if (Model.MemberRequests > 0)
                    {
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/groups/@Model.ProfileName/member-requests">Member requests <span class="tab-count danger">@Model.MemberRequests</span></a>
                </div>
                    }
                <div class="tab">
                    <a data-val-for="timeline-contents" class="active" href="/groups/@Model.ProfileName/members">Members</a>
                </div>
                }
            </div>
        </div>
    </div>
    @if (Model.Mode == Types.Enums.GroupMode.General)
    {

        if (Model.Member != null && Model.Member.ObjectStatus == (int)Types.Enums.AssociationRequestStatus.Approve)
        {
            <div id="career-contents">
                <div class="career-summary section-floated">
                    <div class="section-floated-container">
                        @{Html.RenderPartial("_ShareUpdateGroup", Model);}
                    </div>
                </div>
            </div>
        }
        <div class="feeds" id="divFeeds">

        </div>
        @section _FooterScripts{
            <script type="text/javascript">
                profileHash = '@Model.ProfileHash';

                var profileHash = '@Model.ProfileHash';
                var pageNumber = -1;
                function loadTimeLineFeeds(initialLoad) {
                    $(this).attr('disabled', 'disabled');
                    if (initialLoad != undefined && initialLoad == true) {
                        pageNumber = 0
                    } else {
                        pageNumber = pageNumber + 1;
                    }
                    $.get('/account/timeline?group=true&q=' + profileHash + '&pageNumber=' + pageNumber.toString(), function (res) {
                        if (res.toString().trim() == '') {
                            $('.load-more').remove();
                        } else {
                            $('.load-more').removeAttr('disabled');
                            $('.load-more').hide();
                            $('.feeds').append(res);
                            tooltip($('.feeds'));
                        }
                    });
                }
                $(document).ready(function () {
                    loadTimeLineFeeds(true);
                });
            </script>
            @Scripts.Render("~/cdn/_AuthHomeScripts")
        }
    }
    else if (Model.Mode == Types.Enums.GroupMode.Requests)
    {
        <div class="career-history-list section-floated">
            <div class="profile-item">
                <div class="text-right">
                    @using (Html.BeginForm("ApproveAll", "Association", FormMethod.Post, new { @onsubmit = "return approveAll($(this));" }))
                    {
                        @Html.HiddenFor(c => c.ProfileHash, new { @id = "hash" })
                        @Html.AntiForgeryToken()
                        <button class="link-alike">Approve all</button>
                    }
                </div>
                <div id="divMemberRequests">
                </div>
            </div>
        </div>
        @section _FooterScripts{
            <script type="text/javascript">
                profileHash = '@Model.ProfileHash';
                var pageNumber = -1;
                function loadMembersRequests(initialLoad) {
                    $(this).attr('disabled', 'disabled');
                    if (initialLoad != undefined && initialLoad == true) {
                        pageNumber = 0
                    } else {
                        pageNumber = pageNumber + 1;
                    }
                    $.get('/groups/members?pending=true&group=true&q=' + profileHash + '&pageNumber=' + pageNumber.toString(), function (res) {
                        if (res.toString().trim() == '') {
                            $('.load-more').remove();
                        } else {
                            $('.load-more').removeAttr('disabled');
                            $('.load-more').hide();
                            $('#divMemberRequests').append(res);
                            tooltip($('#divMemberRequests'));
                        }
                    });
                }
                $(document).ready(function () {
                    loadMembersRequests(true);
                });
                function approveAll($obj) {
                    var ser = $obj.serialize();
                    var action = $obj.attr('action');
                    $.ajax({
                        url: action,
                        type: 'POST',
                        data: ser,
                        dataType: 'json',
                        waitingSelector: $obj.find('.waiting-bg'),
                        success: function (response) {
                            if (response.Type == 2) {
                                showPopableSuccessAlert(response.Description);
                                $('#divMemberRequests').find('button').remove();
                                $('<span />').attr('class', 'btn btn-success btn-sm').appendTo($('#divMemberRequests').find('.buttons')).html('Approved');
                            } else {
                                showPopableErrorAlert(response.Description);
                            }
                        }
                    });
                    return false;
                }
            </script>
            @Scripts.Render("~/cdn/_NetworkSharedScripts")
        }
    }
    else if (Model.Mode == Types.Enums.GroupMode.Members)
    {
        <div class="career-history-list section-floated">
            <div class="profile-item">
                <div id="divMembers">
                </div>
            </div>
        </div>
        @section _FooterScripts{
            <script type="text/javascript">
                profileHash = '@Model.ProfileHash';
                var pageNumber = -1;
                function loadMembers(initialLoad) {
                    $(this).attr('disabled', 'disabled');
                    if (initialLoad != undefined && initialLoad == true) {
                        pageNumber = 0
                    } else {
                        pageNumber = pageNumber + 1;
                    }
                    $.get('/groups/members?pending=false&group=true&q=' + profileHash + '&pageNumber=' + pageNumber.toString(), function (res) {
                        if (res.toString().trim() == '') {
                            $('.load-more').remove();
                        } else {
                            $('.load-more').removeAttr('disabled');
                            $('.load-more').hide();
                            $('#divMembers').append(res);
                            tooltip($('#divMembers'));
                        }
                    });
                }
                $(document).ready(function () {
                    loadMembers(true);
                });
            </script>
        }
    }
</div>
<style>
    .profile-item h3 {
        font-weight: normal !important;
    }

    .profile-item {
        padding: 10px;
        border-bottom: 1px solid #ccc;
    }

        .profile-item h3 small {
            font-size: 12px;
        }

    .profile-items .child-profile-item-heading {
        color: #555 !important;
    }

    .profile-item p {
        font-size: 14px;
    }

    .section-floated h1 {
        font-size: 22px;
        color: #1e68b9;
        padding: 10px 13px 0px 10px;
    }

    .plus-add-profile-item button.working {
        cursor: wait;
    }

    span.working {
        color: #fff !important;
        cursor: wait;
    }
</style>
