@model Wrly.Models.ProfileViewModel
@{
    ViewBag.Title = string.Format("Sklative | {0} ", Model.FormatedName);
    ViewBag.Description = string.Format("View {0}'s skills, connections, work history, accomplishments, education and certifications.", Model.FormatedName);
    ViewBag.Keywords = "build professional network, network for business, Business profiles";
    
    Layout = "~/Views/Shared/_LayoutAuthenticated.cshtml";
    var projectEnabled = Model.Widgets.Any(c => c.WidgetName.Equals("Projects"));
    var publicationEnabled = Model.Widgets.Any(c => c.WidgetName.Equals("Publishings"));
    var compositionEnabled = Model.Widgets.Any(c => c.WidgetName.Equals("Compositions"));
    var researchEnabled = Model.Widgets.Any(c => c.WidgetName.Equals("Researches"));
    var findingEnabled = Model.Widgets.Any(c => c.WidgetName.Equals("Establishments"));
    var awardEnabled = Model.Widgets.Any(c => c.WidgetName.Equals("Awards"));
    string profileClass = Model.ProfileLevel == (int)Types.Enums.CareerStage.Retired ? "profile-ex" : Model.ProfileLevel == (int)Types.Enums.CareerStage.Student ? "profile-student" : "profile-general";
    bool isDefaultMode = Model.ProfileMode == Types.Enums.ProfileMode.Default;
}
<link href="~/Content/Views/profile/_mobile.css" rel="stylesheet" />
<div class="mobile-container">
    @{ViewBag.DefaultTab = isDefaultMode; Html.RenderPartial("_ManageProfileFace", Model);}
    <div class="section-floated">
        <div class="section-floated-container">
            <div class="text-right"><a href="/@Model.ProfileName">View public</a></div>
            <div class="tabs">
                @if (isDefaultMode)
                {
                <div class="tab">
                    <a data-val-for="career-contents" class="active" href="/profile">Career</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/connections">Connections</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/followers">Followers</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/timeline">Updates</a>
                </div>
                }
                else if (Model.ProfileMode == Types.Enums.ProfileMode.Connections)
                {
                <div class="tab">
                    <a data-val-for="career-contents" href="/profile">Career</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" class="active" href="/profile/connections">Connections</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/followers">Followers</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/timeline">Updates</a>
                </div>
                }
                else if (Model.ProfileMode == Types.Enums.ProfileMode.Feeds)
                {
                <div class="tab">
                    <a data-val-for="career-contents" href="/profile">Career</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/connections">Connections</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/followers">Followers</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" class="active" href="/profile/timeline">Updates</a>
                </div>
                }
                else if (Model.ProfileMode == Types.Enums.ProfileMode.Followers || Model.ProfileMode == Types.Enums.ProfileMode.Following)
                {
                <div class="tab">
                    <a data-val-for="career-contents" href="/profile">Career</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/connections">Connections</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" class="active" href="/profile/followers">Followers</a>
                </div>
                <div class="tab">
                    <a data-val-for="timeline-contents" href="/profile/timeline">Updates</a>
                </div>
                }
            </div>
        </div>
    </div>


    @if (isDefaultMode)
    {
        @section _HeadStyles
    {
            @Styles.Render("~/cdn/_ProfileSharedStyles")
            @Styles.Render("~/cdn/_ProfileManageStyles")
        }

        @section _FooterScripts{

            <script type="text/javascript">
                totalConnections = @(Model.TotalConnections)
                    profileHash = '@Model.ProfileHash';
                $(document).ready(function () {

                    @if (awardEnabled)
                            {
                <text>$("#award-history").setTemplateURL("/Templates/award-list.txt");
                    $("#award-history").processTemplateURL("/award/index", null, { ___callback: tooltip($("#award-history")) });</text>
                            }
                    @if (projectEnabled)
                            {
            <text>$("#project-history").setTemplateURL("/Templates/project-list.txt");
                    $("#project-history").processTemplateURL("/award/assignments", null, { ___callback: tooltip($("#project-history")) });</text>
                            }
                    @if (publicationEnabled)
                            {
        <text>$("#publication-history").setTemplateURL("/Templates/publication-list.txt");
                    $("#publication-history").processTemplateURL("/award/publications", null, { ___callback: tooltip($("#publication-history")) });</text>
                            }
                    @if (compositionEnabled)
                            {
               <text>$("#composition-history").setTemplateURL("/Templates/composition-list.txt");
                    $("#composition-history").processTemplateURL("/award/compositions", null, { ___callback: tooltip($("#composition-history")) });</text>
                            }
                    @if (researchEnabled)
                            {
               <text>$("#researches-list").setTemplateURL("/Templates/research-list.txt");
                    $("#researches-list").processTemplateURL("/award/researches", null, { ___callback: tooltip($("#researches-list")) });</text>
                            }

                    @if (findingEnabled)
                            {
             <text>$("#findings-list").setTemplateURL("/Templates/finding-list.txt")
                    $("#findings-list").processTemplateURL("/award/findings", null, { ___callback: tooltip($("#findings-list")) });</text>
                            }

                    $("#career-history").setTemplateURL("/Templates/company-list.txt", null, { filter_data: false });
                    $("#skill-history").setTemplateURL("/Templates/skill-list.txt");
                    $("#education-history").setTemplateURL("/Templates/education-list.txt", null, { filter_data: false });
                    $("#recommendation-list").setTemplateURL("/Templates/recommendation-list.txt");
                    $("#appriciation-list").setTemplateURL("/Templates/appriciation-list.txt");
                    $("#certification-history").setTemplateURL("/Templates/certification-list.txt", null, { filter_data: false });


                    $("#career-history").processTemplateURL("/careerhistory/career");
                    $("#education-history").processTemplateURL("/careerhistory/education");
                    $("#certification-history").processTemplateURL("/careerhistory/certification");
                    $("#skill-history").processTemplateURL("/skillhistory/skill");
                    $("#recommendation-list").processTemplateURL("/reference/recommendation", null, { ___callback: tooltip($("#recommendation-list")) });
                    $("#appriciation-list").processTemplateURL("/reference/appriciations", null, { ___callback: tooltip($("#appriciation-list")) });
                });
            </script>
            @Scripts.Render("~/cdn/_ProfileManage")
        }
        if (isDefaultMode)
        {
            @Html.Partial("_ProfileScore", Model)
        }
        if (Model.TotalConnections <= 50)
        {
            <div class="section-floated">
                <div class="section-floated-container" id="contact-import-container" style="display:none;">
                </div>
            </div>
        }
        Html.RenderPartial("_ManageProfileItems", Model);
    }
    else if (Model.ProfileMode == Types.Enums.ProfileMode.Connections)
    {
        @section _HeadStyles
    {
            @Styles.Render("~/cdn/_ProfileSharedStyles")
        }
        @section _FooterScripts{

            <script type="text/javascript">
                totalConnections = @(Model.TotalConnections)
                profileHash = '@Model.ProfileHash';
            </script>
            @Scripts.Render("~/cdn/_ProfileCommon")
        }
        <div class="career-history-list section-floated">
            <div class="section-floated-container">
                <h1>Your connections</h1>
                @{Html.RenderPartial("_ConnectionExistingTiles", Model.Connections);}
            </div>
        </div>
    }
    else if (Model.ProfileMode == Types.Enums.ProfileMode.Followers || Model.ProfileMode == Types.Enums.ProfileMode.Following)
    {
        @section _HeadStyles
    {
            @Styles.Render("~/cdn/_ProfileSharedStyles")
        }
        @section _FooterScripts{

            <script type="text/javascript">
                totalConnections = @(Model.TotalConnections)
                profileHash = '@Model.ProfileHash';
            </script>
            @Scripts.Render("~/cdn/_NetworkSharedScripts")
            @Scripts.Render("~/cdn/_ProfileCommon")
        }
        <div class="career-history-list section-floated">
            <div class="section-floated-container">
                @if (Model.ProfileMode == Types.Enums.ProfileMode.Followers)
                {
                    <h1>Your followers</h1>
                    <div class="text-right"><a href="/profile/following">Follow list</a></div>
                    Html.RenderPartial("_ConnectionFollowerTiles", Model.Followers);
                }
                else
                {
                    <h1>Your follow list</h1>
                    <div class="text-right"><a href="/profile/followers">Followers</a></div>
                    Html.RenderPartial("_ConnectionFollowingTiles", Model.Followers);
                }
            </div>
        </div>
    }
    else if (Model.ProfileMode == Types.Enums.ProfileMode.Feeds)
    {
        @section _HeadStyles
    {
            @Styles.Render("~/cdn/_ProfileSharedStyles")
            @Styles.Render("~/cdn/_NewsFeedStyles")
        }
        @section _FooterScripts{

            <script type="text/javascript">
                totalConnections = @(Model.TotalConnections)
                profileHash = '@Model.ProfileHash';
            </script>
            @Scripts.Render("~/cdn/_ProfileCommon")
            @Scripts.Render("~/cdn/_NewsFeeds")
        }
        <div class="feeds">
            @{Html.RenderPartial("_Feeds", Model.Feed.Feeds);}
        </div>
    }
</div>
<style>
    .profile-item h3 {
        font-weight: normal !important;
    }

    .profile-item {
        padding: 10px;
        border-bottom: 1px solid #ccc;
    }

        .profile-item h3 small {
            font-size: 12px;
        }

    .profile-items .child-profile-item-heading {
        color: #555 !important;
    }

    .profile-item p {
        font-size: 14px;
    }

    .section-floated h1 {
        font-size: 22px;
        color: #1e68b9;
        padding: 10px 13px 0px 10px;
    }

    .plus-add-profile-item button.working {
        cursor: wait;
    }

    span.working {
        color: #fff !important;
        cursor: wait;
    }
</style>
